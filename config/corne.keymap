/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E             &kp R      &kp T    &kp Y  &kp U      &kp I          &kp O    &kp P     &kp EQUAL
&kp LEFT_SHIFT    &kp A  &kp S  &kp D             &kp F      &kp G    &kp H  &kp J      &kp K          &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C             &kp V      &kp B    &kp N  &kp M      &kp COMMA      &kp DOT  &kp FSLH  &kp MINUS
                                &kp LEFT_COMMAND  &kp ENTER  &mo 2    &mo 1  &kp SPACE  &kp BACKSPACE
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &kp DOLLAR    &kp PERCENT    &kp CARET     &kp AMPERSAND   &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp GRAVE  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4  &kp N5         &kp NUMBER_6  &kp N7          &kp N8           &kp N9                &kp N0                 &trans
&trans     &trans           &kp PIPE      &kp BACKSLASH  &trans        &trans         &trans        &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                                          &trans         &trans        &trans         &trans        &trans          &trans
            >;
        };

        control-and-dups {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans        &trans        &trans          &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT        &kp C_VOL_DN   &kp C_VOL_UP  &trans
&out OUT_TOG  &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT        &kp DOWN          &kp UP            &kp RIGHT      &trans        &trans
&trans        &trans                &trans                &trans        &trans        &trans          &kp LC(LEFT)    &kp LC(DOWN)      &kp LC(UP_ARROW)  &kp LC(RIGHT)  &trans        &bt BT_CLR
                                                          &trans        &kp LEFT_ALT  &trans          &trans          &kp UNDER         &trans
            >;
        };
    };
};
