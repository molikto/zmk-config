/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        blueclear {
            bindings = <&bt BT_CLR>;
            key-positions = <11 23 35>;
            layers = <2>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <20 21>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <8 9>;
            layers = <0>;
        };

        leftp {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <18 19>;
            layers = <0>;
        };

        rightp {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            layers = <0>;
        };

        leftb {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <6 7>;
        };

        rightb {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <8 7>;
            layers = <0>;
        };

        leftr {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
            layers = <0>;
        };

        rightr {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 31>;
            layers = <0>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <2 1>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <13 14>;
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                &kp Q  &kp W  &kp E             &kp R               &kp T         &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_SHIFT ESCAPE  &kp A  &kp S  &kp D             &kp F               &kp G         &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL              &kp Z  &kp X  &kp C             &kp V               &kp B         &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp EQUAL
                                     &kp LEFT_COMMAND  &mt LEFT_ALT ENTER  &kp ESCAPE    &mo 1  &kp SPACE  &mo 2
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT      &kp CARET       &kp AMPERSAND    &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp GRAVE  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5           &kp NUMBER_6    &kp N7           &kp N8            &kp N9                &kp N0                 &trans
&trans     &trans           &trans        &trans        &kp PIPE      &kp BACKSLASH    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &trans                 &trans
                                          &trans        &trans        &trans           &trans          &trans           &trans
            >;
        };

        control-and-dups {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans          &trans          &trans            &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT        &kp C_VOL_DN   &kp C_VOL_UP  &trans
&out OUT_TOG  &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4      &kp LEFT        &kp DOWN          &kp UP            &kp RIGHT      &trans        &trans
&trans        &trans                &trans                &kp LG(LS(N3))  &kp LG(LS(N4))  &kp LG(LS(N5))    &kp LC(LEFT)    &kp LC(DOWN)      &kp LC(UP_ARROW)  &kp LC(RIGHT)  &trans        &trans
                                                          &trans          &kp LEFT_ALT    &trans            &trans          &trans            &trans
            >;
        };
    };
};
